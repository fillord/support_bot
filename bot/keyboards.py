# bot/keyboards.py

from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardButton,
    InlineKeyboardMarkup
)


# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (ReplyKeyboardMarkup) ===
def main_menu_keyboard() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìö FAQ")],
            [KeyboardButton(text="üë®‚Äçüíª –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º")],
            [KeyboardButton(text="‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏")]
        ],
        resize_keyboard=True
    )
    return kb


# === Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ FAQ ===
def faq_list_keyboard(faq_entries: list[tuple[int, str]]) -> InlineKeyboardMarkup:
    """
    faq_entries = [(id1, "–í–æ–ø—Ä–æ—Å1"), (id2, "–í–æ–ø—Ä–æ—Å2"), ...]
    –ü–æ—Å—Ç—Ä–æ–∏–º inline_keyboard –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤:
    [
      [InlineKeyboardButton(text="–í–æ–ø—Ä–æ—Å1", callback_data="faq:1")],
      [InlineKeyboardButton(text="–í–æ–ø—Ä–æ—Å2", callback_data="faq:2")],
      ...
      [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="faq:back")]
    ]
    """
    # –°–Ω–∞—á–∞–ª–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ–º ¬´–¥–≤—É–º–µ—Ä–Ω—ã–π¬ª —Å–ø–∏—Å–æ–∫ —Ä—è–¥–æ–≤ (–∫–∞–∂–¥—ã–π —Ä—è–¥ ‚Äî —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –∏–∑ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–∏)
    rows: list[list[InlineKeyboardButton]] = []
    for entry_id, question_text in faq_entries:
        rows.append([
            InlineKeyboardButton(
                text=question_text,
                callback_data=f"faq:{entry_id}"
            )
        ])
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ü–µ –∫–Ω–æ–ø–∫—É ¬´–ù–∞–∑–∞–¥¬ª (–µ—ë —Ç–æ–∂–µ –∫–ª–∞–¥—ë–º –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä—è–¥)
    rows.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="faq:back")])

    return InlineKeyboardMarkup(inline_keyboard=rows)


# === Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ —É –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ ===
def operator_tickets_keyboard(tickets: list[tuple[int, str]]) -> InlineKeyboardMarkup:
    """
    tickets: —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (ticket_id, ticket_preview)
    –§–æ—Ä–º–∏—Ä—É–µ—Ç InlineKeyboard –¥–ª—è Open Tickets:
      ‚Ä¢ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–∫–µ—Ç–∞ ‚Äî –∫–Ω–æ–ø–∫–∞ —Å callback_data="open_ticket:<ticket_id>"
      ‚Ä¢ –≤–Ω–∏–∑—É –¥–≤–µ –∫–Ω–æ–ø–∫–∏: üîÑ –û–±–Ω–æ–≤–∏—Ç—å (callback_data="tickets:refresh") –∏ üîô –ù–∞–∑–∞–¥ (callback_data="tickets:back")
    """
    rows: list[list[InlineKeyboardButton]] = []
    for ticket_id, preview in tickets:
        rows.append([
            InlineKeyboardButton(
                text=f"–¢–∏–∫–µ—Ç #{ticket_id}: {preview[:30]}‚Ä¶",
                callback_data=f"open_ticket:{ticket_id}"
            )
        ])
    # –ù–∏–∂–Ω—è—è —Å—Ç—Ä–æ–∫–∞: ¬´–û–±–Ω–æ–≤–∏—Ç—å¬ª + ¬´–ù–∞–∑–∞–¥¬ª
    rows.append([
        InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="tickets:refresh"),
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="tickets:back")
    ])
    return InlineKeyboardMarkup(inline_keyboard=rows)

# 3) inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –ú–û–ò–• —Ç–∏–∫–µ—Ç–æ–≤ (in_progress)
def operator_my_tickets_keyboard(tickets: list[tuple[int, str]]) -> InlineKeyboardMarkup:
    """
    tickets: —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (ticket_id, ticket_preview)
    –§–æ—Ä–º–∏—Ä—É–µ—Ç InlineKeyboard –¥–ª—è My Tickets:
      ‚Ä¢ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–∫–µ—Ç–∞ ‚Äî –∫–Ω–æ–ø–∫–∞ —Å callback_data="my_ticket:<ticket_id>"
      ‚Ä¢ –≤–Ω–∏–∑—É ‚Äî —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ üîô –ù–∞–∑–∞–¥ (callback_data="tickets:back")
    """
    rows: list[list[InlineKeyboardButton]] = []
    for ticket_id, preview in tickets:
        rows.append([
            InlineKeyboardButton(
                text=f"–¢–∏–∫–µ—Ç #{ticket_id}: {preview[:30]}‚Ä¶",
                callback_data=f"my_ticket:{ticket_id}"
            )
        ])
    # –ù–∏–∂–Ω—è—è —Å—Ç—Ä–æ–∫–∞: —Ç–æ–ª—å–∫–æ ¬´–ù–∞–∑–∞–¥¬ª
    rows.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="tickets:back")
    ])
    return InlineKeyboardMarkup(inline_keyboard=rows)


# === Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–≥–æ —Ç–∏–∫–µ—Ç–∞ (–¥–µ–π—Å—Ç–≤–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) ===
def ticket_actions_keyboard(ticket_id: int, origin: str) -> InlineKeyboardMarkup:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç InlineKeyboard —Å –∫–Ω–æ–ø–∫–∞–º–∏ ¬´–ü—Ä–∏–Ω—è—Ç—å¬ª, ¬´–ó–∞–∫—Ä—ã—Ç—å¬ª, ¬´–ù–∞–∑–∞–¥¬ª.
    origin: "open"   ‚Äî –∏–∑ Open Tickets
            "my"     ‚Äî –∏–∑ My Tickets
    –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç origin, –∫–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥¬ª –ø–æ–ª—É—á–∏—Ç —Ä–∞–∑–Ω—ã–π callback_data:
      ‚Ä¢ –µ—Å–ª–∏ origin="open", —Ç–æ callback_data="back_to_open"
      ‚Ä¢ –µ—Å–ª–∏ origin="my",   —Ç–æ callback_data="back_to_my"
    """
    rows: list[list[InlineKeyboardButton]] = []

    # –ö–Ω–æ–ø–∫–∞ ¬´–ü—Ä–∏–Ω—è—Ç—å —Ç–∏–∫–µ—Ç¬ª
    rows.append([
        InlineKeyboardButton(
            text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å —Ç–∏–∫–µ—Ç",
            callback_data=f"ticket_action:assign:{ticket_id}"
        )
    ])
    # –ö–Ω–æ–ø–∫–∞ ¬´–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç¬ª
    rows.append([
        InlineKeyboardButton(
            text="‚ùå –ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç",
            callback_data=f"ticket_action:close:{ticket_id}"
        )
    ])
    # –ö–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥¬ª ‚Äî —Ä–∞–∑–Ω–∞—è callback_data, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç origin
    if origin == "open":
        back_data = "back_to_open"
    else:  # origin == "my"
        back_data = "back_to_my"

    rows.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=back_data)
    ])

    return InlineKeyboardMarkup(inline_keyboard=rows)

# +++ –ù–û–í–û–ï: 5) ReplyKeyboardMarkup –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ +++
def operator_main_menu() -> ReplyKeyboardMarkup:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏:
      üìã –û—Ç–∫—Ä—ã—Ç—ã–µ —Ç–∏–∫–µ—Ç—ã
      üìÇ –ú–æ–∏ —Ç–∏–∫–µ—Ç—ã
      üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–∏–∫–µ—Ç
    """
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìã –û—Ç–∫—Ä—ã—Ç—ã–µ —Ç–∏–∫–µ—Ç—ã")],
            [KeyboardButton(text="üìÇ –ú–æ–∏ —Ç–∏–∫–µ—Ç—ã")],
            [KeyboardButton(text="üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–∏–∫–µ—Ç")]
        ],
        resize_keyboard=True
    )


# +++ –ù–û–í–û–ï: 6) Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è ¬´–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–∏–∫–µ—Ç¬ª +++
def select_ticket_keyboard(tickets: list[tuple[int, str]]) -> InlineKeyboardMarkup:
    """
    tickets = [(id1, preview1), (id2, preview2), ...], –Ω–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ –∏—Ö in_progress-—Å–ø–∏—Å–æ–∫.
    –§–æ—Ä–º–∏—Ä—É–µ–º InlineKeyboard, –≥–¥–µ –∫–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ ‚Äî ¬´–í—ã–±—Ä–∞—Ç—å —Ç–∏–∫–µ—Ç #<id>¬ª:
      [InlineKeyboardButton(text="–í—ã–±—Ä–∞—Ç—å #5: <preview>...", callback_data="select:5")]
      [InlineKeyboardButton(text="–í—ã–±—Ä–∞—Ç—å #7: <preview>...", callback_data="select:7")]
      [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="select:back")]
    """
    rows: list[list[InlineKeyboardButton]] = []
    for ticket_id, preview in tickets:
        rows.append([
            InlineKeyboardButton(
                text=f"–í—ã–±—Ä–∞—Ç—å #{ticket_id}: {preview[:30]}...",
                callback_data=f"select:{ticket_id}"
            )
        ])
    # –ö–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥¬ª –¥–ª—è –æ—Ç–º–µ–Ω—ã
    rows.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="select:back")])
    return InlineKeyboardMarkup(inline_keyboard=rows)