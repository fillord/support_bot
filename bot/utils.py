# bot/utils.py

from aiogram import Bot
from bot.crud import get_operators
from bot.database import async_session

async def notify_operators(bot: Bot, company_id: int, ticket_id: int, ticket_text: str):
    """
    –£–≤–µ–¥–æ–º–ª—è–µ—Ç –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º —Ç–∏–∫–µ—Ç–µ.
    –ú–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–µ–∫—Å—Ç –≤–∏–¥–∞: "–ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç #ID: —Ç–µ–∫—Å—Ç (–ø–µ—Ä–≤—ã–µ 50 —Å–∏–º–≤–æ–ª–æ–≤). 
    –î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –Ω–∞–∂–º–∏—Ç–µ /take_ticket_<ID>"
    """
    async with async_session() as session:
        operators = await get_operators(session, company_id)
    if not operators:
        return
    for op in operators:
        try:
            await bot.send_message(
                chat_id=int(op.telegram_id),
                text=(
                    f"üÜï *–ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç* #{ticket_id}\n"
                    f"–¢–µ–∫—Å—Ç: {ticket_text[:100]}...\n\n"
                    f"–ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å: –Ω–∞–∂–º–∏—Ç–µ /take_ticket_{ticket_id}"
                ),
                parse_mode="Markdown"
            )
        except Exception as e:
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –±–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ {op.telegram_id}: {e}")
